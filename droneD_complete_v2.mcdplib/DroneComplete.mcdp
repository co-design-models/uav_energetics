mcdp {
    provides travel_distance [km]
    provides num_missions [dimensionless]
    provides carry_payload [g]

    requires total_cost_ownership [$]

    strategy =  instance `Strategy

    actuation_energetics =  instance `ActuationEnergetics

    endurance provided by actuation_energetics>= endurance required by strategy
    velocity provided by actuation_energetics>= velocity required by strategy
    num_missions provided by actuation_energetics >= provided num_missions
    extra_payload provided by actuation_energetics>= provided carry_payload
    distance provided by strategy >= provided travel_distance

    computer = instance `Computer
    perception =  instance `Perception
    computation provided by computer>= computation required by perception


    sensor = instance `Sensor
    resolution provided by sensor >= camera_resolution required by perception
    framerate provided by sensor >= camera_framerate required by perception
    fov provided by sensor >= camera_fov required by perception

    velocity provided by perception >= velocity required by strategy
    extra_power provided by actuation_energetics >= power required by computer + power required by sensor

    # We can take into account the shipping cost
    shipping = instance `Shipping

    total_mass = total_mass required by actuation_energetics

    ships provided by shipping >= total_mass

    required total_cost_ownership >= postage required by shipping + total_cost required by actuation_energetics
}
